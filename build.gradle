buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id "com.matthewprenger.cursegradle" version "1.2.0"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'idea'

version = "${project.minecraft_version}-${project.mod_version}"
group = "com.tyrellplayz.${project.mod_id}"
archivesBaseName = "${project.mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/generated/resources'
        }
        compileClasspath += sourceSets.main.compileClasspath
    }
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: "${project.mcp_mappings}".toString()
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                big_industries {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                big_industries {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'big_industries', '--all', '--output', file('src/generated/resources/'), '--input', file('src/main/resources')
            mods {
                big_industries {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft([
            group: "${project.forge_group}",
            name: "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])

    compileOnly fg.deobf("mezz.jei:jei-${project.minecraft_version}:${project.jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.minecraft_version}:${project.jei_version}")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    from sourceSets.main.output
    manifest {
        attributes([
            "Specification-Title": "${project.mod_id}",
            "Specification-Vendor": "${project.mod_author}",
            "Specification-Version": "${project.version}",
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.version}",
            "Implementation-Vendor" :"${project.mod_author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


//curseforge {
//    apiKey = project.hasProperty("curseforge_apikey") ? project.curseforge_apikey : "0"
//    project {
  //      id = curse_project_id
    //    changelog = file("changelog.html")
      //  changelogType = "html"
     //   releaseType = "alpha"
     //   relations {
      //      optionalDependency 'jei' // Not Enough Items is an optional addon
    //    }
  //  }
//}